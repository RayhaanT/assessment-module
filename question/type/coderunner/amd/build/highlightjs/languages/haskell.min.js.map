{"version":3,"sources":["../../../src/highlightjs/languages/haskell.js"],"names":["haskell","hljs","COMMENT","variants","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","RECORD","name","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Haskell\nAuthor: Jeremy Hull <sourdrums@gmail.com>\nContributors: Zena Treep <zena.treep@gmail.com>\nWebsite: https://www.haskell.org\nCategory: functional\n*/\n\nfunction haskell(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'}),\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    name: 'Haskell',\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'module', end: 'where',\n        keywords: 'module where',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ]\n  };\n}\n\nmodule.exports = haskell;\n"],"file":"haskell.min.js"}