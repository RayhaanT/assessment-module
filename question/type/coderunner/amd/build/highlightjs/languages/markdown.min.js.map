{"version":3,"sources":["../../../src/highlightjs/languages/markdown.js"],"names":["markdown","INLINE_HTML","begin","end","subLanguage","relevance","LINK","returnBegin","contains","className","excludeBegin","returnEnd","excludeEnd","BOLD","variants","ITALIC","push","CONTAINABLE","concat","HEADER","BLOCKQUOTE","name","aliases","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Markdown\nRequires: xml.js\nAuthor: John Crepezzi <john.crepezzi@gmail.com>\nWebsite: https://daringfireball.net/projects/markdown/\nCategory: common, markup\n*/\n\nfunction markdown(hljs) {\n  const INLINE_HTML = {\n    begin: '<', end: '>',\n    subLanguage: 'xml',\n    relevance: 0\n  };\n  const HORIZONTAL_RULE = {\n    begin: '^[-\\\\*]{3,}', end: '$'\n  };\n  const CODE = {\n    className: 'code',\n    variants: [\n      // TODO: fix to allow these to work with sublanguage also\n      { begin: '(`{3,})(.|\\\\n)*?\\\\1`*[ ]*', },\n      { begin: '(~{3,})(.|\\\\n)*?\\\\1~*[ ]*', },\n      // needed to allow markdown as a sublanguage to work\n      { begin: '```', end: '```+[ ]*$' },\n      { begin: '~~~', end: '~~~+[ ]*$' },\n      { begin: '`.+?`' },\n      {\n        begin: '(?=^( {4}|\\\\t))',\n        // use contains to gobble up multiple lines to allow the block to be whatever size\n        // but only have a single open/close tag vs one per line\n        contains: [\n          { begin: '^( {4}|\\\\t)', end: '(\\\\n)$' }\n        ],\n        relevance: 0\n      }\n    ]\n  };\n  const LIST = {\n    className: 'bullet',\n    begin: '^[ \\t]*([*+-]|(\\\\d+\\\\.))(?=\\\\s+)',\n    end: '\\\\s+',\n    excludeEnd: true\n  };\n  const LINK_REFERENCE = {\n    begin: /^\\[[^\\n]+\\]:/,\n    returnBegin: true,\n    contains: [\n      {\n        className: 'symbol',\n        begin: /\\[/, end: /\\]/,\n        excludeBegin: true, excludeEnd: true\n      },\n      {\n        className: 'link',\n        begin: /:\\s*/, end: /$/,\n        excludeBegin: true\n      }\n    ]\n  };\n  const LINK = {\n    begin: '\\\\[.+?\\\\][\\\\(\\\\[].*?[\\\\)\\\\]]',\n    returnBegin: true,\n    contains: [\n      {\n        className: 'string',\n        begin: '\\\\[', end: '\\\\]',\n        excludeBegin: true,\n        returnEnd: true,\n        relevance: 0\n      },\n      {\n        className: 'link',\n        begin: '\\\\]\\\\(', end: '\\\\)',\n        excludeBegin: true, excludeEnd: true\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\]\\\\[', end: '\\\\]',\n        excludeBegin: true, excludeEnd: true\n      }\n    ],\n    relevance: 10\n  };\n  const BOLD = {\n    className: 'strong',\n    contains: [],\n    variants: [\n      {begin: /_{2}/, end: /_{2}/ },\n      {begin: /\\*{2}/, end: /\\*{2}/ }\n    ]\n  };\n  const ITALIC = {\n    className: 'emphasis',\n    contains: [],\n    variants: [\n      { begin: /\\*(?!\\*)/, end: /\\*/ },\n      { begin: /_(?!_)/, end: /_/, relevance: 0},\n    ]\n  };\n  BOLD.contains.push(ITALIC);\n  ITALIC.contains.push(BOLD);\n\n  var CONTAINABLE = [\n    INLINE_HTML,\n    LINK\n  ];\n\n  BOLD.contains = BOLD.contains.concat(CONTAINABLE);\n  ITALIC.contains = ITALIC.contains.concat(CONTAINABLE);\n\n  CONTAINABLE = CONTAINABLE.concat(BOLD,ITALIC);\n\n  const HEADER = {\n    className: 'section',\n    variants: [\n      {\n        begin: '^#{1,6}',\n        end: '$',\n        contains: CONTAINABLE\n       },\n      {\n        begin: '(?=^.+?\\\\n[=-]{2,}$)',\n        contains: [\n          { begin: '^[=-]*$' },\n          { begin: '^', end: \"\\\\n\", contains: CONTAINABLE },\n        ]\n       }\n    ]\n  };\n\n  const BLOCKQUOTE = {\n    className: 'quote',\n    begin: '^>\\\\s+',\n    contains: CONTAINABLE,\n    end: '$',\n  };\n\n  return {\n    name: 'Markdown',\n    aliases: ['md', 'mkdown', 'mkd'],\n    contains: [\n      HEADER,\n      INLINE_HTML,\n      LIST,\n      BOLD,\n      ITALIC,\n      BLOCKQUOTE,\n      CODE,\n      HORIZONTAL_RULE,\n      LINK,\n      LINK_REFERENCE\n    ]\n  };\n}\n\nmodule.exports = markdown;\n"],"file":"markdown.min.js"}