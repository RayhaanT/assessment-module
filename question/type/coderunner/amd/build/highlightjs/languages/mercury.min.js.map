{"version":3,"sources":["../../../src/highlightjs/languages/mercury.js"],"names":["mercury","hljs","COMMENT","ATOM","inherit","APOS_STRING_MODE","relevance","STRING","QUOTE_STRING_MODE","contains","slice","push","className","begin","name","aliases","keywords","keyword","meta","built_in","variants","C_BLOCK_COMMENT_MODE","NUMBER_MODE","module","exports"],"mappings":"AAOA,QAASA,CAAAA,OAAT,CAAiBC,CAAjB,CAAuB,IA8BjBC,CAAAA,CAAO,CAAGD,CAAI,CAACC,OAAL,CAAa,GAAb,CAAkB,GAAlB,CA9BO,CAqCjBC,CAAI,CAAGF,CAAI,CAACG,OAAL,CAAaH,CAAI,CAACI,gBAAlB,CAAoC,CAACC,SAAS,CAAE,CAAZ,CAApC,CArCU,CAsCjBC,CAAM,CAAGN,CAAI,CAACG,OAAL,CAAaH,CAAI,CAACO,iBAAlB,CAAqC,CAACF,SAAS,CAAE,CAAZ,CAArC,CAtCQ,CA4CrBC,CAAM,CAACE,QAAP,CAAkBF,CAAM,CAACE,QAAP,CAAgBC,KAAhB,EAAlB,CACAH,CAAM,CAACE,QAAP,CAAgBE,IAAhB,CANiB,CACfC,SAAS,CAAE,OADI,CAEfC,KAAK,CAAE,uEAFQ,CAGfP,SAAS,CAAE,CAHI,CAMjB,EAqBA,MAAO,CACLQ,IAAI,CAAE,SADD,CAELC,OAAO,CAAE,CAAC,GAAD,CAAM,KAAN,CAFJ,CAGLC,QAAQ,CApEK,CACbC,OAAO,odADM,CASbC,IAAI,grBATS,CAwBbC,QAAQ,oIAxBK,CAiER,CAILV,QAAQ,CAAE,CAvBM,CAChBG,SAAS,CAAE,UADK,CAEhBQ,QAAQ,CAAE,CACR,CAACP,KAAK,CAAE,KAAR,CADQ,CAER,CAACA,KAAK,CAAE,IAAR,CAAcP,SAAS,CAAE,CAAzB,CAFQ,CAGR,CAACO,KAAK,CAAE,IAAR,CAAcP,SAAS,CAAE,CAAzB,CAHQ,CAIR,CAACO,KAAK,CAAE,OAAR,CAJQ,CAKR,CAACA,KAAK,CAAE,OAAR,CALQ,CAFM,CAuBN,CAZgB,CAC1BD,SAAS,CAAE,UADe,CAE1BQ,QAAQ,CAAE,CACR,CAACP,KAAK,CAAE,UAAR,CADQ,CAER,CAACA,KAAK,CAAE,GAAR,CAAaP,SAAS,CAAE,CAAxB,CAFQ,CAFgB,CAYhB,CAGRJ,CAHQ,CAIRD,CAAI,CAACoB,oBAJG,CAtCE,CACZT,SAAS,CAAE,QADC,CAEZC,KAAK,CAAE,0BAFK,CAsCF,CAMRZ,CAAI,CAACqB,WANG,CAORnB,CAPQ,CAQRI,CARQ,CASR,CAACM,KAAK,CAAE,IAAR,CATQ,CAUR,CAACA,KAAK,CAAE,KAAR,CAVQ,CAJL,CAiBR,CAEDU,MAAM,CAACC,OAAP,CAAiBxB,OAAjB","sourcesContent":["/*\nLanguage: Mercury\nAuthor: mucaho <mkucko@gmail.com>\nDescription: Mercury is a logic/functional programming language which combines the clarity and expressiveness of declarative programming with advanced static analysis and error detection features.\nWebsite: https://www.mercurylang.org\n*/\n\nfunction mercury(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'module use_module import_module include_module end_module initialise ' +\n      'mutable initialize finalize finalise interface implementation pred ' +\n      'mode func type inst solver any_pred any_func is semidet det nondet ' +\n      'multi erroneous failure cc_nondet cc_multi typeclass instance where ' +\n      'pragma promise external trace atomic or_else require_complete_switch ' +\n      'require_det require_semidet require_multi require_nondet ' +\n      'require_cc_multi require_cc_nondet require_erroneous require_failure',\n    meta:\n      // pragma\n      'inline no_inline type_spec source_file fact_table obsolete memo ' +\n      'loop_check minimal_model terminates does_not_terminate ' +\n      'check_termination promise_equivalent_clauses ' +\n      // preprocessor\n      'foreign_proc foreign_decl foreign_code foreign_type ' +\n      'foreign_import_module foreign_export_enum foreign_export ' +\n      'foreign_enum may_call_mercury will_not_call_mercury thread_safe ' +\n      'not_thread_safe maybe_thread_safe promise_pure promise_semipure ' +\n      'tabled_for_io local untrailed trailed attach_to_io_state ' +\n      'can_pass_as_mercury_type stable will_not_throw_exception ' +\n      'may_modify_trail will_not_modify_trail may_duplicate ' +\n      'may_not_duplicate affects_liveness does_not_affect_liveness ' +\n      'doesnt_affect_liveness no_sharing unknown_sharing sharing',\n    built_in:\n      'some all not if then else true fail false try catch catch_any ' +\n      'semidet_true semidet_false semidet_fail impure_true impure semipure'\n  };\n\n  var COMMENT = hljs.COMMENT('%', '$');\n\n  var NUMCODE = {\n    className: 'number',\n    begin: \"0'.\\\\|0[box][0-9a-fA-F]*\"\n  };\n\n  var ATOM = hljs.inherit(hljs.APOS_STRING_MODE, {relevance: 0});\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {relevance: 0});\n  var STRING_FMT = {\n    className: 'subst',\n    begin: '\\\\\\\\[abfnrtv]\\\\|\\\\\\\\x[0-9a-fA-F]*\\\\\\\\\\\\|%[-+# *.0-9]*[dioxXucsfeEgGp]',\n    relevance: 0\n  };\n  STRING.contains = STRING.contains.slice(); // we need our own copy of contains\n  STRING.contains.push(STRING_FMT);\n\n  var IMPLICATION = {\n    className: 'built_in',\n    variants: [\n      {begin: '<=>'},\n      {begin: '<=', relevance: 0},\n      {begin: '=>', relevance: 0},\n      {begin: '/\\\\\\\\'},\n      {begin: '\\\\\\\\/'}\n    ]\n  };\n\n  var HEAD_BODY_CONJUNCTION = {\n    className: 'built_in',\n    variants: [\n      {begin: ':-\\\\|-->'},\n      {begin: '=', relevance: 0}\n    ]\n  };\n\n  return {\n    name: 'Mercury',\n    aliases: ['m', 'moo'],\n    keywords: KEYWORDS,\n    contains: [\n      IMPLICATION,\n      HEAD_BODY_CONJUNCTION,\n      COMMENT,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMCODE,\n      hljs.NUMBER_MODE,\n      ATOM,\n      STRING,\n      {begin: /:-/}, // relevance booster\n      {begin: /\\.$/} // relevance booster\n    ]\n  };\n}\n\nmodule.exports = mercury;\n"],"file":"mercury.min.js"}