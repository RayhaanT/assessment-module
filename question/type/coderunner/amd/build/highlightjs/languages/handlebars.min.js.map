{"version":3,"sources":["../../../src/highlightjs/languages/handlebars.js"],"names":["handlebars","hljs","BUILT_INS","IDENTIFIER_PLAIN_OR_QUOTED","begin","EXPRESSION_OR_HELPER_CALL","inherit","keywords","starts","endsWithParent","relevance","contains","BLOCK_MUSTACHE_CONTENTS","className","BASIC_MUSTACHE_CONTENTS","name","aliases","case_insensitive","subLanguage","skip","COMMENT","end","returnEnd","module","exports"],"mappings":"AASA,QAASA,CAAAA,UAAT,CAAoBC,CAApB,CAA0B,IACpBC,CAAAA,CAAS,CAAG,CAAC,eAAgB,+GAAjB,CADQ,CAGpBC,CAA0B,CAAG,CAC/BC,KAAK,CAAE,yBADwB,CAHT,CAOpBC,CAAyB,CAAGJ,CAAI,CAACK,OAAL,CAAaH,CAAb,CAAyC,CACvEI,QAAQ,CAAEL,CAD6D,CAEvEM,MAAM,CAAE,CAENC,cAAc,GAFR,CAGNC,SAAS,CAAE,CAHL,CAINC,QAAQ,CAAE,CAACV,CAAI,CAACK,OAAL,CAAaH,CAAb,CAAyC,CAACO,SAAS,CAAE,CAAZ,CAAzC,CAAD,CAJJ,CAF+D,CAAzC,CAPR,CAiBpBE,CAAuB,CAAGX,CAAI,CAACK,OAAL,CAAaD,CAAb,CAAwC,CACpEQ,SAAS,CAAE,MADyD,CAAxC,CAjBN,CAqBpBC,CAAuB,CAAGb,CAAI,CAACK,OAAL,CAAaD,CAAb,CAAwC,CAEpEK,SAAS,CAAE,CAFyD,CAAxC,CArBN,CA6BxB,MAAO,CACLK,IAAI,CAAE,YADD,CAELC,OAAO,CAAE,CAAC,KAAD,CAAQ,UAAR,CAAoB,iBAApB,CAFJ,CAGLC,gBAAgB,GAHX,CAILC,WAAW,CAAE,KAJR,CAKLP,QAAQ,CAAE,CARoC,CAACP,KAAK,CAAE,QAAR,CAAkBe,IAAI,GAAtB,CAQpC,CAP2C,CAACf,KAAK,CAAE,cAAR,CAAwBe,IAAI,GAA5B,CAO3C,CAGRlB,CAAI,CAACmB,OAAL,CAAa,SAAb,CAAwB,QAAxB,CAHQ,CAIRnB,CAAI,CAACmB,OAAL,CAAa,OAAb,CAAsB,MAAtB,CAJQ,CAKR,CAEEP,SAAS,CAAE,cAFb,CAGET,KAAK,CAAE,gBAHT,CAG2BiB,GAAG,CAAE,UAHhC,CAIEV,QAAQ,CAAE,CAACC,CAAD,CAJZ,CAKEJ,MAAM,CAAE,CAACa,GAAG,CAAE,YAAN,CAAoBC,SAAS,GAA7B,CAAqCJ,WAAW,CAAE,KAAlD,CALV,CALQ,CAYR,CAEEL,SAAS,CAAE,cAFb,CAGET,KAAK,CAAE,YAHT,CAGuBiB,GAAG,CAAE,UAH5B,CAIEV,QAAQ,CAAE,CAACC,CAAD,CAJZ,CAZQ,CAkBR,CAEEC,SAAS,CAAE,cAFb,CAGET,KAAK,CAAE,WAHT,CAGsBiB,GAAG,CAAE,MAH3B,CAIEV,QAAQ,CAAE,CAACC,CAAD,CAJZ,CAlBQ,CAwBR,CAEEC,SAAS,CAAE,mBAFb,CAGET,KAAK,CAAE,QAHT,CAGmBiB,GAAG,CAAE,QAHxB,CAIEd,QAAQ,CAAEL,CAJZ,CAKES,QAAQ,CAAE,CAACG,CAAD,CALZ,CAxBQ,CA+BR,CAEED,SAAS,CAAE,mBAFb,CAGET,KAAK,CAAE,MAHT,CAGiBiB,GAAG,CAAE,MAHtB,CAIEd,QAAQ,CAAEL,CAJZ,CAKES,QAAQ,CAAE,CAACG,CAAD,CALZ,CA/BQ,CALL,CA6CR,CAEDS,MAAM,CAACC,OAAP,CAAiBxB,UAAjB","sourcesContent":["/*\nLanguage: Handlebars\nRequires: xml.js\nAuthor: Robin Ward <robin.ward@gmail.com>\nDescription: Matcher for Handlebars as well as EmberJS additions.\nWebsite: https://handlebarsjs.com\nCategory: template\n*/\n\nfunction handlebars(hljs) {\n  var BUILT_INS = {'builtin-name': 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup'};\n\n  var IDENTIFIER_PLAIN_OR_QUOTED = {\n    begin: /\".*?\"|'.*?'|\\[.*?\\]|\\w+/\n  };\n\n  var EXPRESSION_OR_HELPER_CALL = hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\n    keywords: BUILT_INS,\n    starts: {\n      // helper params\n      endsWithParent: true,\n      relevance: 0,\n      contains: [hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {relevance: 0})]\n    }\n  });\n\n  var BLOCK_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    className: 'name'\n  });\n\n  var BASIC_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    // relevance 0 for backward compatibility concerning auto-detection\n    relevance: 0\n  });\n\n  var ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {begin: /\\\\\\{\\{/, skip: true};\n  var PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {begin: /\\\\\\\\(?=\\{\\{)/, skip: true};\n\n  return {\n    name: 'Handlebars',\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH,\n      PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH,\n      hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/),\n      hljs.COMMENT(/\\{\\{!/, /\\}\\}/),\n      {\n        // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{(?!\\/)/, end: /\\}\\}\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS],\n        starts: {end: /\\{\\{\\{\\{\\//, returnEnd: true, subLanguage: 'xml'}\n      },\n      {\n        // close raw block\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{\\//, end: /\\}\\}\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS]\n      },\n      {\n        // open block statement\n        className: 'template-tag',\n        begin: /\\{\\{[#\\/]/, end: /\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS],\n      },\n      {\n        // template variable or helper-call that is NOT html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{\\{/, end: /\\}\\}\\}/,\n        keywords: BUILT_INS,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      },\n      {\n        // template variable or helper-call that is html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /\\}\\}/,\n        keywords: BUILT_INS,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      }\n    ]\n  };\n}\n\nmodule.exports = handlebars;\n"],"file":"handlebars.min.js"}