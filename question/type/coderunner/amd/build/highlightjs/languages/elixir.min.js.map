{"version":3,"sources":["../../../src/highlightjs/languages/elixir.js"],"names":["elixir","hljs","ELIXIR_KEYWORDS","SUBST","className","begin","end","lexemes","keywords","NUMBER","relevance","SIGIL_DELIMITERS","LOWERCASE_SIGIL","contains","endsParent","BACKSLASH_ESCAPE","variants","STRING","FUNCTION","beginKeywords","inherit","TITLE_MODE","CLASS","ELIXIR_DEFAULT_CONTAINS","HASH_COMMENT_MODE","RE_STARTERS_RE","illegal","name","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Elixir\nAuthor: Josh Adams <josh@isotope11.com>\nDescription: language definition for Elixir source code files (.ex and .exs).  Based on ruby language support.\nCategory: functional\nWebsite: https://elixir-lang.org\n*/\n\nfunction elixir(hljs) {\n  var ELIXIR_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_.]*(\\\\!|\\\\?)?';\n  var ELIXIR_METHOD_RE = '[a-zA-Z_]\\\\w*[!?=]?|[-+~]\\\\@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?';\n  var ELIXIR_KEYWORDS =\n    'and false then defined module in return redo retry end for true self when ' +\n    'next until do begin unless nil break not case cond alias while ensure or ' +\n    'include use alias fn quote require import with|0';\n  var SUBST = {\n    className: 'subst',\n    begin: '#\\\\{', end: '}',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS\n  };\n  var NUMBER = {\n    className: 'number',\n    begin: '(\\\\b0o[0-7_]+)|(\\\\b0b[01_]+)|(\\\\b0x[0-9a-fA-F_]+)|(-?\\\\b[1-9][0-9_]*(.[0-9_]+([eE][-+]?[0-9]+)?)?)',\n    relevance: 0\n  };\n  var SIGIL_DELIMITERS = '[/|([{<\"\\']';\n  var LOWERCASE_SIGIL = {\n    className: 'string',\n    begin: '~[a-z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      {\n        endsParent:true,\n        contains: [{\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            { begin: /\"/, end: /\"/ },\n            { begin: /'/, end: /'/ },\n            { begin: /\\//, end: /\\// },\n            { begin: /\\|/, end: /\\|/ },\n            { begin: /\\(/, end: /\\)/ },\n            { begin: /\\[/, end: /\\]/ },\n            { begin: /\\{/, end: /\\}/ },\n            { begin: /</, end: />/ }\n          ]\n        }]\n      },\n    ],\n  };\n\n  var UPCASE_SIGIL = {\n    className: 'string',\n    begin: '~[A-Z]' + '(?=' + SIGIL_DELIMITERS + ')',\n    contains: [\n      { begin: /\"/, end: /\"/ },\n      { begin: /'/, end: /'/ },\n      { begin: /\\//, end: /\\// },\n      { begin: /\\|/, end: /\\|/ },\n      { begin: /\\(/, end: /\\)/ },\n      { begin: /\\[/, end: /\\]/ },\n      { begin: /\\{/, end: /\\}/ },\n      { begin: /\\</, end: /\\>/ }\n    ]\n  };\n\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [\n      {\n        begin: /\"\"\"/, end: /\"\"\"/,\n      },\n      {\n        begin: /'''/, end: /'''/,\n      },\n      {\n        begin: /~S\"\"\"/, end: /\"\"\"/,\n        contains: []\n      },\n      {\n        begin: /~S\"/, end: /\"/,\n        contains: []\n      },\n      {\n        begin: /~S'''/, end: /'''/,\n        contains: []\n      },\n      {\n        begin: /~S'/, end: /'/,\n        contains: []\n      },\n      {\n        begin: /'/, end: /'/\n      },\n      {\n        begin: /\"/, end: /\"/\n      },\n    ]\n  };\n  var FUNCTION = {\n    className: 'function',\n    beginKeywords: 'def defp defmacro', end: /\\B\\b/, // the mode is ended by the title\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {\n        begin: ELIXIR_IDENT_RE,\n        endsParent: true\n      })\n    ]\n  };\n  var CLASS = hljs.inherit(FUNCTION, {\n    className: 'class',\n    beginKeywords: 'defimpl defmodule defprotocol defrecord', end: /\\bdo\\b|$|;/\n  });\n  var ELIXIR_DEFAULT_CONTAINS = [\n    STRING,\n    UPCASE_SIGIL,\n    LOWERCASE_SIGIL,\n    hljs.HASH_COMMENT_MODE,\n    CLASS,\n    FUNCTION,\n    {\n      begin: '::'\n    },\n    {\n      className: 'symbol',\n      begin: ':(?![\\\\s:])',\n      contains: [STRING, {begin: ELIXIR_METHOD_RE}],\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ELIXIR_IDENT_RE + ':(?!:)',\n      relevance: 0\n    },\n    NUMBER,\n    {\n      className: 'variable',\n      begin: '(\\\\$\\\\W)|((\\\\$|\\\\@\\\\@?)(\\\\w+))'\n    },\n    {\n      begin: '->'\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + ')\\\\s*',\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          // to prevent false regex triggers for the division function:\n          // /:\n          begin: /\\/: (?=\\d+\\s*[,\\]])/,\n          relevance: 0,\n          contains: [\n            NUMBER\n          ]\n        },\n        {\n          className: 'regexp',\n          illegal: '\\\\n',\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n          variants: [\n            {\n              begin: '/', end: '/[a-z]*'\n            },\n            {\n              begin: '%r\\\\[', end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ],\n      relevance: 0\n    }\n  ];\n  SUBST.contains = ELIXIR_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Elixir',\n    lexemes: ELIXIR_IDENT_RE,\n    keywords: ELIXIR_KEYWORDS,\n    contains: ELIXIR_DEFAULT_CONTAINS\n  };\n}\n\nmodule.exports = elixir;\n"],"file":"elixir.min.js"}