{"version":3,"sources":["../../../src/highlightjs/languages/json.js"],"names":["json","hljs","LITERALS","literal","ALLOWED_COMMENTS","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","TYPES","QUOTE_STRING_MODE","C_NUMBER_MODE","VALUE_CONTAINER","end","endsWithParent","excludeEnd","contains","keywords","OBJECT","begin","className","BACKSLASH_ESCAPE","illegal","inherit","concat","ARRAY","push","forEach","rule","name","module","exports"],"mappings":"AAQA,QAASA,CAAAA,IAAT,CAAcC,CAAd,CAAoB,IACdC,CAAAA,CAAQ,CAAG,CAACC,OAAO,CAAE,iBAAV,CADG,CAEdC,CAAgB,CAAG,CACrBH,CAAI,CAACI,mBADgB,CAErBJ,CAAI,CAACK,oBAFgB,CAFL,CAMdC,CAAK,CAAG,CACVN,CAAI,CAACO,iBADK,CAEVP,CAAI,CAACQ,aAFK,CANM,CAUdC,CAAe,CAAG,CACpBC,GAAG,CAAE,GADe,CACVC,cAAc,GADJ,CACYC,UAAU,GADtB,CAEpBC,QAAQ,CAAEP,CAFU,CAGpBQ,QAAQ,CAAEb,CAHU,CAVJ,CAedc,CAAM,CAAG,CACXC,KAAK,CAAE,GADI,CACCN,GAAG,CAAE,GADN,CAEXG,QAAQ,CAAE,CACR,CACEI,SAAS,CAAE,MADb,CAEED,KAAK,CAAE,GAFT,CAEcN,GAAG,CAAE,GAFnB,CAGEG,QAAQ,CAAE,CAACb,CAAI,CAACkB,gBAAN,CAHZ,CAIEC,OAAO,CAAE,KAJX,CADQ,CAORnB,CAAI,CAACoB,OAAL,CAAaX,CAAb,CAA8B,CAACO,KAAK,CAAE,GAAR,CAA9B,CAPQ,EAQRK,MARQ,CAQDlB,CARC,CAFC,CAWXgB,OAAO,CAAE,KAXE,CAfK,CA4BdG,CAAK,CAAG,CACVN,KAAK,CAAE,KADG,CACIN,GAAG,CAAE,KADT,CAEVG,QAAQ,CAAE,CAACb,CAAI,CAACoB,OAAL,CAAaX,CAAb,CAAD,CAFA,CAGVU,OAAO,CAAE,KAHC,CA5BM,CAiClBb,CAAK,CAACiB,IAAN,CAAWR,CAAX,CAAmBO,CAAnB,EACAnB,CAAgB,CAACqB,OAAjB,CAAyB,SAASC,CAAT,CAAe,CACtCnB,CAAK,CAACiB,IAAN,CAAWE,CAAX,CACD,CAFD,EAGA,MAAO,CACLC,IAAI,CAAE,MADD,CAELb,QAAQ,CAAEP,CAFL,CAGLQ,QAAQ,CAAEb,CAHL,CAILkB,OAAO,CAAE,KAJJ,CAMR,CAEDQ,MAAM,CAACC,OAAP,CAAiB7B,IAAjB","sourcesContent":["/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols\n*/\n\nfunction json(hljs) {\n  var LITERALS = {literal: 'true false null'};\n  var ALLOWED_COMMENTS = [\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE\n  ];\n  var TYPES = [\n    hljs.QUOTE_STRING_MODE,\n    hljs.C_NUMBER_MODE\n  ];\n  var VALUE_CONTAINER = {\n    end: ',', endsWithParent: true, excludeEnd: true,\n    contains: TYPES,\n    keywords: LITERALS\n  };\n  var OBJECT = {\n    begin: '{', end: '}',\n    contains: [\n      {\n        className: 'attr',\n        begin: /\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE],\n        illegal: '\\\\n',\n      },\n      hljs.inherit(VALUE_CONTAINER, {begin: /:/})\n    ].concat(ALLOWED_COMMENTS),\n    illegal: '\\\\S'\n  };\n  var ARRAY = {\n    begin: '\\\\[', end: '\\\\]',\n    contains: [hljs.inherit(VALUE_CONTAINER)], // inherit is a workaround for a bug that makes shared modes with endsWithParent compile only the ending of one of the parents\n    illegal: '\\\\S'\n  };\n  TYPES.push(OBJECT, ARRAY);\n  ALLOWED_COMMENTS.forEach(function(rule) {\n    TYPES.push(rule);\n  });\n  return {\n    name: 'JSON',\n    contains: TYPES,\n    keywords: LITERALS,\n    illegal: '\\\\S'\n  };\n}\n\nmodule.exports = json;\n"],"file":"json.min.js"}