{"version":3,"sources":["../../../src/highlightjs/languages/zephir.js"],"names":["zephir","hljs","STRING","className","contains","BACKSLASH_ESCAPE","variants","inherit","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","TITLE_MODE","UNDERSCORE_TITLE_MODE","NUMBER","BINARY_NUMBER_MODE","C_NUMBER_MODE","KEYWORDS","name","aliases","keywords","C_LINE_COMMENT_MODE","COMMENT","begin","end","beginKeywords","excludeEnd","C_BLOCK_COMMENT_MODE","module","exports"],"mappings":"AAOA,QAASA,CAAAA,MAAT,CAAgBC,CAAhB,CAAsB,IAChBC,CAAAA,CAAM,CAAG,CACXC,SAAS,CAAE,QADA,CAEXC,QAAQ,CAAE,CAACH,CAAI,CAACI,gBAAN,CAFC,CAGXC,QAAQ,CAAE,CACRL,CAAI,CAACM,OAAL,CAAaN,CAAI,CAACO,gBAAlB,CAAoC,CAACC,OAAO,CAAE,IAAV,CAApC,CADQ,CAERR,CAAI,CAACM,OAAL,CAAaN,CAAI,CAACS,iBAAlB,CAAqC,CAACD,OAAO,CAAE,IAAV,CAArC,CAFQ,CAHC,CADO,CAShBE,CAAU,CAAGV,CAAI,CAACW,qBATF,CAUhBC,CAAM,CAAG,CAACP,QAAQ,CAAE,CAACL,CAAI,CAACa,kBAAN,CAA0Bb,CAAI,CAACc,aAA/B,CAAX,CAVO,CAWhBC,CAAQ,sfAXQ,CAsCpB,MAAO,CACLC,IAAI,CAAE,QADD,CAELC,OAAO,CAAE,CAAC,KAAD,CAFJ,CAGLC,QAAQ,CAAEH,CAHL,CAILZ,QAAQ,CAAE,CACRH,CAAI,CAACmB,mBADG,CAERnB,CAAI,CAACoB,OAAL,CACE,MADF,CAEE,MAFF,CAGE,CACEjB,QAAQ,CAAE,CACR,CACED,SAAS,CAAE,QADb,CAEEmB,KAAK,CAAE,YAFT,CADQ,CADZ,CAHF,CAFQ,CAcR,CACEnB,SAAS,CAAE,QADb,CAEEmB,KAAK,CAAE,sBAFT,CAEiCC,GAAG,CAAE,QAFtC,CAGEnB,QAAQ,CAAE,CAACH,CAAI,CAACI,gBAAN,CAHZ,CAdQ,CAmBR,CAEEiB,KAAK,CAAE,kDAFT,CAnBQ,CAuBR,CACEnB,SAAS,CAAE,UADb,CAEEqB,aAAa,CAAE,aAFjB,CAEgCD,GAAG,CAAE,MAFrC,CAE6CE,UAAU,GAFvD,CAGEhB,OAAO,CAAE,WAHX,CAIEL,QAAQ,CAAE,CACRO,CADQ,CAER,CACER,SAAS,CAAE,QADb,CAEEmB,KAAK,CAAE,KAFT,CAEgBC,GAAG,CAAE,KAFrB,CAGEJ,QAAQ,CAAEH,CAHZ,CAIEZ,QAAQ,CAAE,CACR,MADQ,CAERH,CAAI,CAACyB,oBAFG,CAGRxB,CAHQ,CAIRW,CAJQ,CAJZ,CAFQ,CAJZ,CAvBQ,CA0CR,CACEV,SAAS,CAAE,OADb,CAEEqB,aAAa,CAAE,iBAFjB,CAEoCD,GAAG,CAAE,GAFzC,CAE8CE,UAAU,GAFxD,CAGEhB,OAAO,CAAE,UAHX,CAIEL,QAAQ,CAAE,CACR,CAACoB,aAAa,CAAE,oBAAhB,CADQ,CAERb,CAFQ,CAJZ,CA1CQ,CAmDR,CACEa,aAAa,CAAE,WADjB,CAC8BD,GAAG,CAAE,GADnC,CAEEd,OAAO,CAAE,OAFX,CAGEL,QAAQ,CAAE,CAACO,CAAD,CAHZ,CAnDQ,CAwDR,CACEa,aAAa,CAAE,KADjB,CACwBD,GAAG,CAAE,GAD7B,CAEEnB,QAAQ,CAAE,CAACO,CAAD,CAFZ,CAxDQ,CA4DR,CACEW,KAAK,CAAE,IADT,CA5DQ,CA+DRpB,CA/DQ,CAgERW,CAhEQ,CAJL,CAuER,CAEDc,MAAM,CAACC,OAAP,CAAiB5B,MAAjB","sourcesContent":["/*\n Language: Zephir\n Description: Zephir, an open source, high-level language designed to ease the creation and maintainability of extensions for PHP with a focus on type and memory safety.\n Author: Oleg Efimov <efimovov@gmail.com>\n Website: https://zephir-lang.com/en\n */\n\nfunction zephir(hljs) {\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null})\n    ]\n  };\n  var TITLE_MODE = hljs.UNDERSCORE_TITLE_MODE;\n  var NUMBER = {variants: [hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]};\n  var KEYWORDS =\n    // classes and objects\n    'namespace class interface use extends ' +\n    'function return ' +\n    'abstract final public protected private static deprecated ' +\n    // error handling\n    'throw try catch Exception ' +\n    // keyword-ish things their website does NOT seem to highlight (in their own snippets)\n    // 'typeof fetch in ' +\n    // operators/helpers\n    'echo empty isset instanceof unset ' +\n    // assignment/variables\n    'let var new const self ' +\n    // control\n    'require ' +\n    'if else elseif switch case default ' +\n    'do while loop for continue break ' +\n    'likely unlikely ' +\n    // magic constants\n    // https://github.com/phalcon/zephir/blob/master/Library/Expression/Constants.php\n    '__LINE__ __FILE__ __DIR__ __FUNCTION__ __CLASS__ __TRAIT__ __METHOD__ __NAMESPACE__ ' +\n    // types - https://docs.zephir-lang.com/0.12/en/types\n    'array boolean float double integer object resource string ' +\n    'char long unsigned bool int uint ulong uchar ' +\n    // built-ins\n    'true false null undefined';\n\n  return {\n    name: 'Zephir',\n    aliases: ['zep'],\n    keywords: KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.COMMENT(\n        '/\\\\*',\n        '\\\\*/',\n        {\n          contains: [\n            {\n              className: 'doctag',\n              begin: '@[A-Za-z]+'\n            }\n          ]\n        }\n      ),\n      {\n        className: 'string',\n        begin: '<<<[\\'\"]?\\\\w+[\\'\"]?$', end: '^\\\\w+;',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        // swallow composed identifiers to avoid parsing them as keywords\n        begin: /(::|->)+[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function fn', end: /[;{]/, excludeEnd: true,\n        illegal: '\\\\$|\\\\[|%',\n        contains: [\n          TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)',\n            keywords: KEYWORDS,\n            contains: [\n              'self',\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRING,\n              NUMBER\n            ]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class interface', end: '{', excludeEnd: true,\n        illegal: /[:\\(\\$\"]/,\n        contains: [\n          {beginKeywords: 'extends implements'},\n          TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'namespace', end: ';',\n        illegal: /[\\.']/,\n        contains: [TITLE_MODE]\n      },\n      {\n        beginKeywords: 'use', end: ';',\n        contains: [TITLE_MODE]\n      },\n      {\n        begin: '=>' // No markup, just a relevance booster\n      },\n      STRING,\n      NUMBER\n    ]\n  };\n}\n\nmodule.exports = zephir;\n"],"file":"zephir.min.js"}