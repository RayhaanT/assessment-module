{"version":3,"sources":["../../../src/highlightjs/languages/fsharp.js"],"names":["fsharp","hljs","TYPEPARAM","begin","end","contains","inherit","TITLE_MODE","name","aliases","keywords","illegal","className","COMMENT","beginKeywords","excludeEnd","UNDERSCORE_TITLE_MODE","relevance","BACKSLASH_ESCAPE","C_LINE_COMMENT_MODE","QUOTE_STRING_MODE","C_NUMBER_MODE","module","exports"],"mappings":"AAOA,QAASA,CAAAA,MAAT,CAAgBC,CAAhB,CAAsB,CACpB,GAAIC,CAAAA,CAAS,CAAG,CACdC,KAAK,CAAE,GADO,CACFC,GAAG,CAAE,GADH,CAEdC,QAAQ,CAAE,CACRJ,CAAI,CAACK,OAAL,CAAaL,CAAI,CAACM,UAAlB,CAA8B,CAACJ,KAAK,CAAE,gBAAR,CAA9B,CADQ,CAFI,CAAhB,CAOA,MAAO,CACLK,IAAI,CAAE,IADD,CAELC,OAAO,CAAE,CAAC,IAAD,CAFJ,CAGLC,QAAQ,wXAHH,CAULC,OAAO,CAAE,MAVJ,CAWLN,QAAQ,CAAE,CACR,CAEEO,SAAS,CAAE,SAFb,CAGET,KAAK,CAAE,0BAHT,CADQ,CAMR,CACES,SAAS,CAAE,QADb,CAEET,KAAK,CAAE,KAFT,CAEeC,GAAG,CAAE,IAFpB,CAGEC,QAAQ,CAAE,CAAC,CAACF,KAAK,CAAE,MAAR,CAAD,CAHZ,CANQ,CAWR,CACES,SAAS,CAAE,QADb,CAEET,KAAK,CAAE,QAFT,CAEgBC,GAAG,CAAE,QAFrB,CAXQ,CAeRH,CAAI,CAACY,OAAL,CAAa,QAAb,CAAuB,QAAvB,CAfQ,CAgBR,CACED,SAAS,CAAE,OADb,CAEEE,aAAa,CAAE,MAFjB,CAEyBV,GAAG,CAAE,SAF9B,CAEyCW,UAAU,GAFnD,CAGEV,QAAQ,CAAE,CACRJ,CAAI,CAACe,qBADG,CAERd,CAFQ,CAHZ,CAhBQ,CAwBR,CACEU,SAAS,CAAE,MADb,CAEET,KAAK,CAAE,MAFT,CAEiBC,GAAG,CAAE,MAFtB,CAGEa,SAAS,CAAE,EAHb,CAxBQ,CA6BR,CACEL,SAAS,CAAE,QADb,CAEET,KAAK,CAAE,mBAFT,CAGEE,QAAQ,CAAE,CAACJ,CAAI,CAACiB,gBAAN,CAHZ,CA7BQ,CAkCRjB,CAAI,CAACkB,mBAlCG,CAmCRlB,CAAI,CAACK,OAAL,CAAaL,CAAI,CAACmB,iBAAlB,CAAqC,CAACT,OAAO,CAAE,IAAV,CAArC,CAnCQ,CAoCRV,CAAI,CAACoB,aApCG,CAXL,CAkDR,CAEDC,MAAM,CAACC,OAAP,CAAiBvB,MAAjB","sourcesContent":["/*\nLanguage: F#\nAuthor: Jonas Folles√∏ <jonas@follesoe.no>\nContributors: Troy Kershaw <hello@troykershaw.com>, Henrik Feldt <henrik@haf.se>\nWebsite: https://docs.microsoft.com/en-us/dotnet/fsharp/\nCategory: functional\n*/\nfunction fsharp(hljs) {\n  var TYPEPARAM = {\n    begin: '<', end: '>',\n    contains: [\n      hljs.inherit(hljs.TITLE_MODE, {begin: /'[a-zA-Z0-9_]+/})\n    ]\n  };\n\n  return {\n    name: 'F#',\n    aliases: ['fs'],\n    keywords:\n      'abstract and as assert base begin class default delegate do done ' +\n      'downcast downto elif else end exception extern false finally for ' +\n      'fun function global if in inherit inline interface internal lazy let ' +\n      'match member module mutable namespace new null of open or ' +\n      'override private public rec return sig static struct then to ' +\n      'true try type upcast use val void when while with yield',\n    illegal: /\\/\\*/,\n    contains: [\n      {\n        // monad builder keywords (matches before non-bang kws)\n        className: 'keyword',\n        begin: /\\b(yield|return|let|do)!/\n      },\n      {\n        className: 'string',\n        begin: '@\"', end: '\"',\n        contains: [{begin: '\"\"'}]\n      },\n      {\n        className: 'string',\n        begin: '\"\"\"', end: '\"\"\"'\n      },\n      hljs.COMMENT('\\\\(\\\\*', '\\\\*\\\\)'),\n      {\n        className: 'class',\n        beginKeywords: 'type', end: '\\\\(|=|$', excludeEnd: true,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          TYPEPARAM\n        ]\n      },\n      {\n        className: 'meta',\n        begin: '\\\\[<', end: '>\\\\]',\n        relevance: 10\n      },\n      {\n        className: 'symbol',\n        begin: '\\\\B(\\'[A-Za-z])\\\\b',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      hljs.C_NUMBER_MODE\n    ]\n  };\n}\n\nmodule.exports = fsharp;\n"],"file":"fsharp.min.js"}