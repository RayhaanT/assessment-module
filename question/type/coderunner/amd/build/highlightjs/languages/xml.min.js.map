{"version":3,"sources":["../../../src/highlightjs/languages/xml.js"],"names":["xml","hljs","XML_ENTITIES","className","begin","XML_META_KEYWORDS","contains","illegal","XML_META_PAR_KEYWORDS","inherit","end","APOS_META_STRING_MODE","APOS_STRING_MODE","QUOTE_META_STRING_MODE","QUOTE_STRING_MODE","TAG_INTERNALS","endsWithParent","relevance","endsParent","variants","name","aliases","case_insensitive","COMMENT","keywords","starts","returnEnd","subLanguage","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: HTML, XML\nWebsite: https://www.w3.org/XML/\nCategory: common\n*/\n\nfunction xml(hljs) {\n  var XML_IDENT_RE = '[A-Za-z0-9\\\\._:-]+';\n  var XML_ENTITIES = {\n    className: 'symbol',\n    begin: '&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;'\n  };\n  var XML_META_KEYWORDS = {\n\t  begin: '\\\\s',\n\t  contains:[\n\t    {\n\t      className: 'meta-keyword',\n\t      begin: '#?[a-z_][a-z1-9_-]+',\n\t      illegal: '\\\\n',\n      }\n\t  ]\n  };\n  var XML_META_PAR_KEYWORDS = hljs.inherit(XML_META_KEYWORDS, {begin: '\\\\(', end: '\\\\)'});\n  var APOS_META_STRING_MODE = hljs.inherit(hljs.APOS_STRING_MODE, {className: 'meta-string'});\n  var QUOTE_META_STRING_MODE = hljs.inherit(hljs.QUOTE_STRING_MODE, {className: 'meta-string'});\n  var TAG_INTERNALS = {\n    endsWithParent: true,\n    illegal: /</,\n    relevance: 0,\n    contains: [\n      {\n        className: 'attr',\n        begin: XML_IDENT_RE,\n        relevance: 0\n      },\n      {\n        begin: /=\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'string',\n            endsParent: true,\n            variants: [\n              {begin: /\"/, end: /\"/, contains: [XML_ENTITIES]},\n              {begin: /'/, end: /'/, contains: [XML_ENTITIES]},\n              {begin: /[^\\s\"'=<>`]+/}\n            ]\n          }\n        ]\n      }\n    ]\n  };\n  return {\n    name: 'HTML, XML',\n    aliases: ['html', 'xhtml', 'rss', 'atom', 'xjb', 'xsd', 'xsl', 'plist', 'wsf', 'svg'],\n    case_insensitive: true,\n    contains: [\n      {\n        className: 'meta',\n        begin: '<![a-z]', end: '>',\n        relevance: 10,\n        contains: [\n\t\t\t\t  XML_META_KEYWORDS,\n\t\t\t\t  QUOTE_META_STRING_MODE,\n\t\t\t\t  APOS_META_STRING_MODE,\n\t\t\t\t\tXML_META_PAR_KEYWORDS,\n\t\t\t\t\t{\n\t\t\t\t\t  begin: '\\\\[', end: '\\\\]',\n\t\t\t\t\t  contains:[\n\t\t\t\t\t\t  {\n\t\t\t\t\t      className: 'meta',\n\t\t\t\t\t      begin: '<![a-z]', end: '>',\n\t\t\t\t\t      contains: [\n\t\t\t\t\t        XML_META_KEYWORDS,\n\t\t\t\t\t        XML_META_PAR_KEYWORDS,\n\t\t\t\t\t        QUOTE_META_STRING_MODE,\n\t\t\t\t\t        APOS_META_STRING_MODE\n\t\t\t\t\t\t    ]\n\t\t\t        }\n\t\t\t\t\t  ]\n\t\t\t\t  }\n\t\t\t\t]\n      },\n      hljs.COMMENT(\n        '<!--',\n        '-->',\n        {\n          relevance: 10\n        }\n      ),\n      {\n        begin: '<\\\\!\\\\[CDATA\\\\[', end: '\\\\]\\\\]>',\n        relevance: 10\n      },\n      XML_ENTITIES,\n      {\n        className: 'meta',\n        begin: /<\\?xml/, end: /\\?>/, relevance: 10\n      },\n      {\n        className: 'tag',\n        /*\n        The lookahead pattern (?=...) ensures that 'begin' only matches\n        '<style' as a single word, followed by a whitespace or an\n        ending braket. The '$' is needed for the lexeme to be recognized\n        by hljs.subMode() that tests lexemes outside the stream.\n        */\n        begin: '<style(?=\\\\s|>)', end: '>',\n        keywords: {name: 'style'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '</style>', returnEnd: true,\n          subLanguage: ['css', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        // See the comment in the <style tag about the lookahead pattern\n        begin: '<script(?=\\\\s|>)', end: '>',\n        keywords: {name: 'script'},\n        contains: [TAG_INTERNALS],\n        starts: {\n          end: '\\<\\/script\\>', returnEnd: true,\n          subLanguage: ['javascript', 'handlebars', 'xml']\n        }\n      },\n      {\n        className: 'tag',\n        begin: '</?', end: '/?>',\n        contains: [\n          {\n            className: 'name', begin: /[^\\/><\\s]+/, relevance: 0\n          },\n          TAG_INTERNALS\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = xml;\n"],"file":"xml.min.js"}