function cal(a){var b=[a.C_LINE_COMMENT_MODE,a.COMMENT(/\{/,/\}/,{relevance:0}),a.COMMENT(/\(\*/,/\*\)/,{relevance:10})],c={className:"string",begin:/'/,end:/'/,contains:[{begin:/''/}]},d={className:"string",begin:/(#\d+)+/},e={className:"function",beginKeywords:"procedure",end:/[:;]/,keywords:"procedure|10",contains:[a.TITLE_MODE,{className:"params",begin:/\(/,end:/\)/,keywords:"div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to until while with var",contains:[c,d]}].concat(b)},f={className:"class",begin:"OBJECT (Table|Form|Report|Dataport|Codeunit|XMLport|MenuSuite|Page|Query) (\\d+) ([^\\r\\n]+)",returnBegin:!0,contains:[a.TITLE_MODE,e]};return{name:"C/AL",case_insensitive:!0,keywords:{keyword:"div mod in and or not xor asserterror begin case do downto else end exit for if of repeat then to until while with var",literal:"false true"},illegal:/\/\*/,contains:[c,d,{className:"number",begin:"\\b\\d+(\\.\\d+)?(DT|D|T)",relevance:0},{className:"string",begin:"\"",end:"\""},a.NUMBER_MODE,f,e]}}module.exports=cal;
//# sourceMappingURL=cal.min.js.map
