{"version":3,"sources":["../../src/lib-esm/rematch.js"],"names":["str","x","y","xValue","trim","yValue","lev","levenshtein","length","distance","findBestMatch","a","b","cache","Map","bestMatchDist","bestMatch","i","j","cacheKey","JSON","stringify","md","has","get","set","indexA","indexB","score","group","level","bm","a1","slice","b1","aMatch","bMatch","tailA","tailB","a2","b2","group1","groupMatch","group2","result","concat","matrix","charAt","Math","min"],"mappings":"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","sourcesContent":["export function levenshtein(a, b) {\n    if (a.length === 0) {\n        return b.length;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n    var matrix = [];\n    var i;\n    for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n    }\n    var j;\n    for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n    }\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, Math.min(matrix[i][j - 1] + 1, matrix[i - 1][j] + 1));\n            }\n        }\n    }\n    return matrix[b.length][a.length];\n}\nexport function newDistanceFn(str) {\n    return function (x, y) {\n        var xValue = str(x).trim();\n        var yValue = str(y).trim();\n        var lev = levenshtein(xValue, yValue);\n        return lev / (xValue.length + yValue.length);\n    };\n}\nexport function newMatcherFn(distance) {\n    function findBestMatch(a, b, cache) {\n        if (cache === void 0) { cache = new Map(); }\n        var bestMatchDist = Infinity;\n        var bestMatch;\n        for (var i = 0; i < a.length; ++i) {\n            for (var j = 0; j < b.length; ++j) {\n                var cacheKey = JSON.stringify([a[i], b[j]]);\n                var md = void 0;\n                if (!(cache.has(cacheKey) && (md = cache.get(cacheKey)))) {\n                    md = distance(a[i], b[j]);\n                    cache.set(cacheKey, md);\n                }\n                if (md < bestMatchDist) {\n                    bestMatchDist = md;\n                    bestMatch = { indexA: i, indexB: j, score: bestMatchDist };\n                }\n            }\n        }\n        return bestMatch;\n    }\n    function group(a, b, level, cache) {\n        if (level === void 0) { level = 0; }\n        if (cache === void 0) { cache = new Map(); }\n        var bm = findBestMatch(a, b, cache);\n        if (!bm || a.length + b.length < 3) {\n            return [[a, b]];\n        }\n        var a1 = a.slice(0, bm.indexA);\n        var b1 = b.slice(0, bm.indexB);\n        var aMatch = [a[bm.indexA]];\n        var bMatch = [b[bm.indexB]];\n        var tailA = bm.indexA + 1;\n        var tailB = bm.indexB + 1;\n        var a2 = a.slice(tailA);\n        var b2 = b.slice(tailB);\n        var group1 = group(a1, b1, level + 1, cache);\n        var groupMatch = group(aMatch, bMatch, level + 1, cache);\n        var group2 = group(a2, b2, level + 1, cache);\n        var result = groupMatch;\n        if (bm.indexA > 0 || bm.indexB > 0) {\n            result = group1.concat(result);\n        }\n        if (a.length > tailA || b.length > tailB) {\n            result = result.concat(group2);\n        }\n        return result;\n    }\n    return group;\n}\n//# sourceMappingURL=rematch.js.map"],"file":"rematch.min.js"}