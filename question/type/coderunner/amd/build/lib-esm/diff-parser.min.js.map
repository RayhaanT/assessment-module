{"version":3,"sources":["../../src/lib-esm/diff-parser.js"],"names":["diffInput","config","files","currentFile","currentBlock","oldLine","oldLine2","newLine","possibleOldName","possibleNewName","oldFileNameHeader","newFileNameHeader","hunkHeaderPrefix","diffLines","replace","split","saveBlock","blocks","push","saveFile","oldName","newName","startFile","deletedLines","addedLines","startBlock","line","values","exec","isCombined","parseInt","startsWith","console","error","lines","oldStartLine","oldStartLine2","newStartLine","header","createLine","currentLine","content","addedPrefixes","deletedPrefixes","startsWithAny","type","LineType","INSERT","oldNumber","newNumber","DELETE","CONTEXT","existHunkHeader","lineIdx","idx","length","forEach","lineIndex","prevLine","nxtLine","afterNxtLine","getFilename","dstPrefix","srcPrefix","Error","isGitDiff","getSrcFilename","language","getExtension","getDstFilename","doesNotExistHunkHeader","oldMode","newMode","deletedFileMode","isDeleted","newFileMode","isNew","isCopy","isRename","isBinary","test","unchangedPercentage","changedPercentage","checksumBefore","checksumAfter","mode","__spreadArrays","s","i","il","arguments","r","Array","k","a","j","jl","filename","filenameParts","str","prefixes","reduce","prefix","baseDiffFilenamePrefixes","linePrefix","extraPrefix","FilenameRegExp","RegExp","_a","_b","matchingPrefix","find","p","indexOf","fnameWithoutPrefix","slice"],"mappings":"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","sourcesContent":["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { LineType } from './types';\nimport { escapeForRegExp } from './utils';\nfunction getExtension(filename, language) {\n    var filenameParts = filename.split('.');\n    return filenameParts.length > 1 ? filenameParts[filenameParts.length - 1] : language;\n}\nfunction startsWithAny(str, prefixes) {\n    return prefixes.reduce(function (startsWith, prefix) { return startsWith || str.startsWith(prefix); }, false);\n}\nvar baseDiffFilenamePrefixes = ['a/', 'b/', 'i/', 'w/', 'c/', 'o/'];\nfunction getFilename(line, linePrefix, extraPrefix) {\n    var prefixes = extraPrefix !== undefined ? __spreadArrays(baseDiffFilenamePrefixes, [extraPrefix]) : baseDiffFilenamePrefixes;\n    var FilenameRegExp = linePrefix\n        ? new RegExp(\"^\" + escapeForRegExp(linePrefix) + \" \\\"?(.+?)\\\"?$\")\n        : new RegExp('^\"?(.+?)\"?$');\n    var _a = FilenameRegExp.exec(line) || [], _b = _a[1], filename = _b === void 0 ? '' : _b;\n    var matchingPrefix = prefixes.find(function (p) { return filename.indexOf(p) === 0; });\n    var fnameWithoutPrefix = matchingPrefix ? filename.slice(matchingPrefix.length) : filename;\n    return fnameWithoutPrefix.replace(/\\s+\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)? [+-]\\d{4}.*$/, '');\n}\nfunction getSrcFilename(line, srcPrefix) {\n    return getFilename(line, '---', srcPrefix);\n}\nfunction getDstFilename(line, dstPrefix) {\n    return getFilename(line, '+++', dstPrefix);\n}\nexport function parse(diffInput, config) {\n    if (config === void 0) { config = {}; }\n    var files = [];\n    var currentFile = null;\n    var currentBlock = null;\n    var oldLine = null;\n    var oldLine2 = null;\n    var newLine = null;\n    var possibleOldName = null;\n    var possibleNewName = null;\n    var oldFileNameHeader = '--- ';\n    var newFileNameHeader = '+++ ';\n    var hunkHeaderPrefix = '@@';\n    var oldMode = /^old mode (\\d{6})/;\n    var newMode = /^new mode (\\d{6})/;\n    var deletedFileMode = /^deleted file mode (\\d{6})/;\n    var newFileMode = /^new file mode (\\d{6})/;\n    var copyFrom = /^copy from \"?(.+)\"?/;\n    var copyTo = /^copy to \"?(.+)\"?/;\n    var renameFrom = /^rename from \"?(.+)\"?/;\n    var renameTo = /^rename to \"?(.+)\"?/;\n    var similarityIndex = /^similarity index (\\d+)%/;\n    var dissimilarityIndex = /^dissimilarity index (\\d+)%/;\n    var index = /^index ([\\da-z]+)\\.\\.([\\da-z]+)\\s*(\\d{6})?/;\n    var binaryFiles = /^Binary files (.*) and (.*) differ/;\n    var binaryDiff = /^GIT binary patch/;\n    var combinedIndex = /^index ([\\da-z]+),([\\da-z]+)\\.\\.([\\da-z]+)/;\n    var combinedMode = /^mode (\\d{6}),(\\d{6})\\.\\.(\\d{6})/;\n    var combinedNewFile = /^new file mode (\\d{6})/;\n    var combinedDeletedFile = /^deleted file mode (\\d{6}),(\\d{6})/;\n    var diffLines = diffInput\n        .replace(/\\\\ No newline at end of file/g, '')\n        .replace(/\\r\\n?/g, '\\n')\n        .split('\\n');\n    function saveBlock() {\n        if (currentBlock !== null && currentFile !== null) {\n            currentFile.blocks.push(currentBlock);\n            currentBlock = null;\n        }\n    }\n    function saveFile() {\n        if (currentFile !== null) {\n            if (!currentFile.oldName && possibleOldName !== null) {\n                currentFile.oldName = possibleOldName;\n            }\n            if (!currentFile.newName && possibleNewName !== null) {\n                currentFile.newName = possibleNewName;\n            }\n            if (currentFile.newName) {\n                files.push(currentFile);\n                currentFile = null;\n            }\n        }\n        possibleOldName = null;\n        possibleNewName = null;\n    }\n    function startFile() {\n        saveBlock();\n        saveFile();\n        currentFile = {\n            blocks: [],\n            deletedLines: 0,\n            addedLines: 0,\n        };\n    }\n    function startBlock(line) {\n        saveBlock();\n        var values;\n        if (currentFile !== null) {\n            if ((values = /^@@ -(\\d+)(?:,\\d+)? \\+(\\d+)(?:,\\d+)? @@.*/.exec(line))) {\n                currentFile.isCombined = false;\n                oldLine = parseInt(values[1], 10);\n                newLine = parseInt(values[2], 10);\n            }\n            else if ((values = /^@@@ -(\\d+)(?:,\\d+)? -(\\d+)(?:,\\d+)? \\+(\\d+)(?:,\\d+)? @@@.*/.exec(line))) {\n                currentFile.isCombined = true;\n                oldLine = parseInt(values[1], 10);\n                oldLine2 = parseInt(values[2], 10);\n                newLine = parseInt(values[3], 10);\n            }\n            else {\n                if (line.startsWith(hunkHeaderPrefix)) {\n                    console.error('Failed to parse lines, starting in 0!');\n                }\n                oldLine = 0;\n                newLine = 0;\n                currentFile.isCombined = false;\n            }\n        }\n        currentBlock = {\n            lines: [],\n            oldStartLine: oldLine,\n            oldStartLine2: oldLine2,\n            newStartLine: newLine,\n            header: line,\n        };\n    }\n    function createLine(line) {\n        if (currentFile === null || currentBlock === null || oldLine === null || newLine === null)\n            return;\n        var currentLine = {\n            content: line,\n        };\n        var addedPrefixes = currentFile.isCombined ? ['+ ', ' +', '++'] : ['+'];\n        var deletedPrefixes = currentFile.isCombined ? ['- ', ' -', '--'] : ['-'];\n        if (startsWithAny(line, addedPrefixes)) {\n            currentFile.addedLines++;\n            currentLine.type = LineType.INSERT;\n            currentLine.oldNumber = undefined;\n            currentLine.newNumber = newLine++;\n        }\n        else if (startsWithAny(line, deletedPrefixes)) {\n            currentFile.deletedLines++;\n            currentLine.type = LineType.DELETE;\n            currentLine.oldNumber = oldLine++;\n            currentLine.newNumber = undefined;\n        }\n        else {\n            currentLine.type = LineType.CONTEXT;\n            currentLine.oldNumber = oldLine++;\n            currentLine.newNumber = newLine++;\n        }\n        currentBlock.lines.push(currentLine);\n    }\n    function existHunkHeader(line, lineIdx) {\n        var idx = lineIdx;\n        while (idx < diffLines.length - 3) {\n            if (line.startsWith('diff')) {\n                return false;\n            }\n            if (diffLines[idx].startsWith(oldFileNameHeader) &&\n                diffLines[idx + 1].startsWith(newFileNameHeader) &&\n                diffLines[idx + 2].startsWith(hunkHeaderPrefix)) {\n                return true;\n            }\n            idx++;\n        }\n        return false;\n    }\n    diffLines.forEach(function (line, lineIndex) {\n        if (!line || line.startsWith('*')) {\n            return;\n        }\n        var values;\n        var prevLine = diffLines[lineIndex - 1];\n        var nxtLine = diffLines[lineIndex + 1];\n        var afterNxtLine = diffLines[lineIndex + 2];\n        if (line.startsWith('diff')) {\n            startFile();\n            var gitDiffStart = /^diff --git \"?(.+)\"? \"?(.+)\"?/;\n            if ((values = gitDiffStart.exec(line))) {\n                possibleOldName = getFilename(values[1], undefined, config.dstPrefix);\n                possibleNewName = getFilename(values[2], undefined, config.srcPrefix);\n            }\n            if (currentFile === null) {\n                throw new Error('Where is my file !!!');\n            }\n            currentFile.isGitDiff = true;\n            return;\n        }\n        if (!currentFile ||\n            (!currentFile.isGitDiff &&\n                currentFile &&\n                line.startsWith(oldFileNameHeader) &&\n                nxtLine.startsWith(newFileNameHeader) &&\n                afterNxtLine.startsWith(hunkHeaderPrefix))) {\n            startFile();\n        }\n        if ((line.startsWith(oldFileNameHeader) && nxtLine.startsWith(newFileNameHeader)) ||\n            (line.startsWith(newFileNameHeader) && prevLine.startsWith(oldFileNameHeader))) {\n            if (currentFile &&\n                !currentFile.oldName &&\n                line.startsWith('--- ') &&\n                (values = getSrcFilename(line, config.srcPrefix))) {\n                currentFile.oldName = values;\n                currentFile.language = getExtension(currentFile.oldName, currentFile.language);\n                return;\n            }\n            if (currentFile &&\n                !currentFile.newName &&\n                line.startsWith('+++ ') &&\n                (values = getDstFilename(line, config.dstPrefix))) {\n                currentFile.newName = values;\n                currentFile.language = getExtension(currentFile.newName, currentFile.language);\n                return;\n            }\n        }\n        if (currentFile &&\n            (line.startsWith(hunkHeaderPrefix) ||\n                (currentFile.isGitDiff && currentFile.oldName && currentFile.newName && !currentBlock))) {\n            startBlock(line);\n            return;\n        }\n        if (currentBlock && (line.startsWith('+') || line.startsWith('-') || line.startsWith(' '))) {\n            createLine(line);\n            return;\n        }\n        var doesNotExistHunkHeader = !existHunkHeader(line, lineIndex);\n        if (currentFile === null) {\n            throw new Error('Where is my file !!!');\n        }\n        if ((values = oldMode.exec(line))) {\n            currentFile.oldMode = values[1];\n        }\n        else if ((values = newMode.exec(line))) {\n            currentFile.newMode = values[1];\n        }\n        else if ((values = deletedFileMode.exec(line))) {\n            currentFile.deletedFileMode = values[1];\n            currentFile.isDeleted = true;\n        }\n        else if ((values = newFileMode.exec(line))) {\n            currentFile.newFileMode = values[1];\n            currentFile.isNew = true;\n        }\n        else if ((values = copyFrom.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.oldName = values[1];\n            }\n            currentFile.isCopy = true;\n        }\n        else if ((values = copyTo.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.newName = values[1];\n            }\n            currentFile.isCopy = true;\n        }\n        else if ((values = renameFrom.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.oldName = values[1];\n            }\n            currentFile.isRename = true;\n        }\n        else if ((values = renameTo.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.newName = values[1];\n            }\n            currentFile.isRename = true;\n        }\n        else if ((values = binaryFiles.exec(line))) {\n            currentFile.isBinary = true;\n            currentFile.oldName = getFilename(values[1], undefined, config.srcPrefix);\n            currentFile.newName = getFilename(values[2], undefined, config.dstPrefix);\n            startBlock('Binary file');\n        }\n        else if (binaryDiff.test(line)) {\n            currentFile.isBinary = true;\n            startBlock(line);\n        }\n        else if ((values = similarityIndex.exec(line))) {\n            currentFile.unchangedPercentage = parseInt(values[1], 10);\n        }\n        else if ((values = dissimilarityIndex.exec(line))) {\n            currentFile.changedPercentage = parseInt(values[1], 10);\n        }\n        else if ((values = index.exec(line))) {\n            currentFile.checksumBefore = values[1];\n            currentFile.checksumAfter = values[2];\n            values[3] && (currentFile.mode = values[3]);\n        }\n        else if ((values = combinedIndex.exec(line))) {\n            currentFile.checksumBefore = [values[2], values[3]];\n            currentFile.checksumAfter = values[1];\n        }\n        else if ((values = combinedMode.exec(line))) {\n            currentFile.oldMode = [values[2], values[3]];\n            currentFile.newMode = values[1];\n        }\n        else if ((values = combinedNewFile.exec(line))) {\n            currentFile.newFileMode = values[1];\n            currentFile.isNew = true;\n        }\n        else if ((values = combinedDeletedFile.exec(line))) {\n            currentFile.deletedFileMode = values[1];\n            currentFile.isDeleted = true;\n        }\n    });\n    saveBlock();\n    saveFile();\n    return files;\n}\n//# sourceMappingURL=diff-parser.js.map"],"file":"diff-parser.min.js"}