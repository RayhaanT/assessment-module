define ("qtype_coderunner/lib-esm/diff-parser",["exports","./types","./utils"],function(a,b,c){"use strict";Object.defineProperty(a,"__esModule",{value:!0});a.parse=function(a,c){if(void 0===c){c={}}var o=[],p=null,q=null,r=null,s=null,t=null,u=null,v=null,w="--- ",x="+++ ",y="@@",z=a.replace(/\\ No newline at end of file/g,"").replace(/\r\n?/g,"\n").split("\n");function i(){if(null!==q&&null!==p){p.blocks.push(q);q=null}}function j(){if(null!==p){if(!p.oldName&&null!==u){p.oldName=u}if(!p.newName&&null!==v){p.newName=v}if(p.newName){o.push(p);p=null}}u=null;v=null}function k(){i();j();p={blocks:[],deletedLines:0,addedLines:0}}function l(a){i();var b;if(null!==p){if(b=/^@@ -(\d+)(?:,\d+)? \+(\d+)(?:,\d+)? @@.*/.exec(a)){p.isCombined=!1;r=parseInt(b[1],10);t=parseInt(b[2],10)}else if(b=/^@@@ -(\d+)(?:,\d+)? -(\d+)(?:,\d+)? \+(\d+)(?:,\d+)? @@@.*/.exec(a)){p.isCombined=!0;r=parseInt(b[1],10);s=parseInt(b[2],10);t=parseInt(b[3],10)}else{if(a.startsWith(y)){console.error("Failed to parse lines, starting in 0!")}r=0;t=0;p.isCombined=!1}}q={lines:[],oldStartLine:r,oldStartLine2:s,newStartLine:t,header:a}}function m(a){if(null===p||null===q||null===r||null===t)return;var c={content:a},d=p.isCombined?["+ "," +","++"]:["+"],f=p.isCombined?["- "," -","--"]:["-"];if(e(a,d)){p.addedLines++;c.type=b.LineType.INSERT;c.oldNumber=void 0;c.newNumber=t++}else if(e(a,f)){p.deletedLines++;c.type=b.LineType.DELETE;c.oldNumber=r++;c.newNumber=void 0}else{c.type=b.LineType.CONTEXT;c.oldNumber=r++;c.newNumber=t++}q.lines.push(c)}function n(a,b){var c=b;while(c<z.length-3){if(a.startsWith("diff")){return!1}if(z[c].startsWith(w)&&z[c+1].startsWith(x)&&z[c+2].startsWith(y)){return!0}c++}return!1}z.forEach(function(a,b){if(!a||a.startsWith("*")){return}var e,i=z[b-1],j=z[b+1],o=z[b+2];if(a.startsWith("diff")){k();if(e=/^diff --git "?(.+)"? "?(.+)"?/.exec(a)){u=f(e[1],void 0,c.dstPrefix);v=f(e[2],void 0,c.srcPrefix)}if(null===p){throw new Error("Where is my file !!!")}p.isGitDiff=!0;return}if(!p||!p.isGitDiff&&p&&a.startsWith(w)&&j.startsWith(x)&&o.startsWith(y)){k()}if(a.startsWith(w)&&j.startsWith(x)||a.startsWith(x)&&i.startsWith(w)){if(p&&!p.oldName&&a.startsWith("--- ")&&(e=g(a,c.srcPrefix))){p.oldName=e;p.language=d(p.oldName,p.language);return}if(p&&!p.newName&&a.startsWith("+++ ")&&(e=h(a,c.dstPrefix))){p.newName=e;p.language=d(p.newName,p.language);return}}if(p&&(a.startsWith(y)||p.isGitDiff&&p.oldName&&p.newName&&!q)){l(a);return}if(q&&(a.startsWith("+")||a.startsWith("-")||a.startsWith(" "))){m(a);return}var r=!n(a,b);if(null===p){throw new Error("Where is my file !!!")}if(e=/^old mode (\d{6})/.exec(a)){p.oldMode=e[1]}else if(e=/^new mode (\d{6})/.exec(a)){p.newMode=e[1]}else if(e=/^deleted file mode (\d{6})/.exec(a)){p.deletedFileMode=e[1];p.isDeleted=!0}else if(e=/^new file mode (\d{6})/.exec(a)){p.newFileMode=e[1];p.isNew=!0}else if(e=/^copy from "?(.+)"?/.exec(a)){if(r){p.oldName=e[1]}p.isCopy=!0}else if(e=/^copy to "?(.+)"?/.exec(a)){if(r){p.newName=e[1]}p.isCopy=!0}else if(e=/^rename from "?(.+)"?/.exec(a)){if(r){p.oldName=e[1]}p.isRename=!0}else if(e=/^rename to "?(.+)"?/.exec(a)){if(r){p.newName=e[1]}p.isRename=!0}else if(e=/^Binary files (.*) and (.*) differ/.exec(a)){p.isBinary=!0;p.oldName=f(e[1],void 0,c.srcPrefix);p.newName=f(e[2],void 0,c.dstPrefix);l("Binary file")}else if(/^GIT binary patch/.test(a)){p.isBinary=!0;l(a)}else if(e=/^similarity index (\d+)%/.exec(a)){p.unchangedPercentage=parseInt(e[1],10)}else if(e=/^dissimilarity index (\d+)%/.exec(a)){p.changedPercentage=parseInt(e[1],10)}else if(e=/^index ([\da-z]+)\.\.([\da-z]+)\s*(\d{6})?/.exec(a)){p.checksumBefore=e[1];p.checksumAfter=e[2];e[3]&&(p.mode=e[3])}else if(e=/^index ([\da-z]+),([\da-z]+)\.\.([\da-z]+)/.exec(a)){p.checksumBefore=[e[2],e[3]];p.checksumAfter=e[1]}else if(e=/^mode (\d{6}),(\d{6})\.\.(\d{6})/.exec(a)){p.oldMode=[e[2],e[3]];p.newMode=e[1]}else if(e=/^new file mode (\d{6})/.exec(a)){p.newFileMode=e[1];p.isNew=!0}else if(e=/^deleted file mode (\d{6}),(\d{6})/.exec(a)){p.deletedFileMode=e[1];p.isDeleted=!0}});i();j();return o};var i=void 0||function(){for(var b=0,c=0,d=arguments.length;c<d;c++){b+=arguments[c].length}for(var e=Array(b),f=0,c=0;c<d;c++){for(var g=arguments[c],a=0,h=g.length;a<h;a++,f++){e[f]=g[a]}}return e};function d(a,b){var c=a.split(".");return 1<c.length?c[c.length-1]:b}function e(a,b){return b.reduce(function(b,c){return b||a.startsWith(c)},!1)}var j=["a/","b/","i/","w/","c/","o/"];function f(a,b,d){var e=d!==void 0?i(j,[d]):j,f=b?new RegExp("^"+(0,c.escapeForRegExp)(b)+" \"?(.+?)\"?$"):/^"?(.+?)"?$/,g=f.exec(a)||[],h=g[1],k=void 0===h?"":h,l=e.find(function(a){return 0===k.indexOf(a)}),m=l?k.slice(l.length):k;return m.replace(/\s+\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}(?:\.\d+)? [+-]\d{4}.*$/,"")}function g(a,b){return f(a,"---",b)}function h(a,b){return f(a,"+++",b)}});
//# sourceMappingURL=diff-parser.min.js.map
